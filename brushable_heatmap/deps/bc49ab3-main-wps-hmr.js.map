{"version":3,"sources":["webpack:///./src/lib/components/BrushableHeatmap.react.js","webpack:///./src/lib/components/d3BrushableHeatmap.js"],"names":["BrushableHeatmap","d3Heatmap","create","el","props","figure","id","label","setProps","value","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","svg","d3","append","attr","update","destroy","_drawPoints","e1","scales","data","g","selectAll","point","d","enter","x","y","z","exit","remove"],"mappings":"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","file":"bc49ab3-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport d3Heatmap from './d3BrushableHeatmap'\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default class BrushableHeatmap extends Component {\n\n    componentDidMount() {\n        d3Heatmap.create(this.el, this.props.figure);\n    }\n\n    render() {\n        const {id, label, setProps, value} = this.props;\n\n        return (\n            <div id={id}>\n                <h2>Test</h2>\n                <div id={this.props.id} ref={el => {this.el = el}} />\n            </div>\n        );\n    }\n}\n\nBrushableHeatmap.defaultProps = {};\n\nBrushableHeatmap.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    label: PropTypes.string.isRequired,\n\n    /**\n     * The value displayed in the input.\n     */\n    value: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n","// d3Heatmap.js\nimport * as d3 from 'd3'\n\nvar d3Heatmap = {}\n\nd3Heatmap.create = (el, props) => {\n    var svg = d3.select(el).append('svg');\n\n    svg.append('g')\n        .attr('class', 'd3-points');\n\n    //Create line element inside SVG\n    /**svg.append(\"line\")\n       .attr(\"x1\", 100)\n       .attr(\"x2\", 500)\n       .attr(\"y1\", 50)\n       .attr(\"y2\", 50)\n       .attr(\"stroke\", \"black\")**/\n\n\n    d3Heatmap.update(el, props);\n};\n\nd3Heatmap.update = function(el) {\n    // Recompute the scales and render the data points\n    //var scales = this._scales(el, state.domain);\n    //this._drawPoints(el, scales, state.data);\n};\n\nd3Heatmap.destroy = function(el) {\n    // Any clean up would go here\n    // in this example there is nothing to do\n};\n\nd3Heatmap._drawPoints = function(e1, scales, data) {\n    var g = d3.select(e1).selectAll('.d3-points');\n\n    var point = g.selectAll('.d3-point')\n        .data(data, function(d) { return d.id; });\n\n    // ENTER\n    point.enter().append('circle')\n        .attr('class', 'd3-point');\n\n    // Enter & UPDATE\n    point.attr('cx', function(d) { return scales.x(d.x); })\n        .attr('cy', function(d) { return scales.y(d.y); })\n        .attr('r', function(d) { return scales.z(d.z); })\n\n    // EXIT\n    point.exit()\n        .remove();\n};\n\nexport default d3Heatmap;\n"],"sourceRoot":""}