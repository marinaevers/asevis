{"version":3,"sources":["webpack:///./src/lib/components/BrushableHeatmap.react.js"],"names":["BrushableHeatmap","d3Heatmap","create","el","props","update","id","Component","defaultProps","width","height","propTypes","PropTypes","string","setProps","func","number","padding","data","object","isRequired","xLabel","yLabel","selectedId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBA,gB;;;;;;;;;;;;;WAEjB,6BAAoB;AAChBC,iEAAS,CAACC,MAAV,CAAiB,KAAKC,EAAtB,EAA0B,KAAKC,KAA/B;AACH;;;WAED,8BAAqB;AACjBH,iEAAS,CAACI,MAAV,CAAiB,KAAKD,KAAtB;AACH;;;WAGD,kBAAS;AAAA;;AACL,0BACI;AAAK,UAAE,EAAE,KAAKA,KAAL,CAAWE,EAApB;AAAwB,WAAG,EAAE,aAAAH,EAAE,EAAI;AAAC,eAAI,CAACA,EAAL,GAAUA,EAAV;AAAa;AAAjD,QADJ;AAGH;;;;EAfyCI,+C;;;AAkB9CP,gBAAgB,CAACQ,YAAjB,GAAgC,EAAhC;AAEAR,gBAAgB,CAACQ,YAAjB,GAAgC;AAC5BC,OAAK,EAAE,GADqB;AAE5BC,QAAM,EAAE;AAFoB,CAAhC;AAKAV,gBAAgB,CAACW,SAAjB,GAA6B;AACzB;AACJ;AACA;AACIL,IAAE,EAAEM,iDAAS,CAACC,MAJW;;AAKzB;AACJ;AACA;AACA;AACIC,UAAQ,EAAEF,iDAAS,CAACG,IATK;;AAWzB;AACJ;AACA;AACIN,OAAK,EAAEG,iDAAS,CAACI,MAdQ;AAezBN,QAAM,EAAEE,iDAAS,CAACI,MAfO;AAgBzBC,SAAO,EAAEL,iDAAS,CAACI,MAhBM;AAiBzBE,MAAI,EAAEN,iDAAS,CAACO,MAAV,CAAiBC,UAjBE;AAkBzBC,QAAM,EAAET,iDAAS,CAACC,MAlBO;AAmBzBS,QAAM,EAAEV,iDAAS,CAACC,MAnBO;AAoBzBU,YAAU,EAAEX,iDAAS,CAACI;AApBG,CAA7B,C","file":"8bdd396-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport d3Heatmap from './d3BrushableHeatmap'\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default class BrushableHeatmap extends Component {\n\n    componentDidMount() {\n        d3Heatmap.create(this.el, this.props);\n    }\n\n    componentDidUpdate() {\n        d3Heatmap.update(this.props)\n    }\n\n\n    render() {\n        return (\n            <div id={this.props.id} ref={el => {this.el = el}} />\n        );\n    }\n}\n\nBrushableHeatmap.defaultProps = {};\n\nBrushableHeatmap.defaultProps = {\n    width: 600,\n    height: 400\n}\n\nBrushableHeatmap.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func,\n\n    /**\n     * Properties for the state of the figure\n     */\n    width: PropTypes.number,\n    height: PropTypes.number,\n    padding: PropTypes.number,\n    data: PropTypes.object.isRequired,\n    xLabel: PropTypes.string,\n    yLabel: PropTypes.string,\n    selectedId: PropTypes.number\n};\n"],"sourceRoot":""}